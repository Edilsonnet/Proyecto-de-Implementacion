/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.15
 * Generated at: 2025-09-26 07:05:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.modules;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class clientes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

  // Requiere sesi√≥n activa
  String user = (String) session.getAttribute("user");
  if (user == null) { response.sendRedirect(request.getContextPath()+"/login"); return; }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <title>M√≥dulo ‚Äî Clientes</title>\r\n");
      out.write("  <!-- Usa tu CSS global -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <div class=\"wrap\">\r\n");
      out.write("    <div class=\"card\">\r\n");
      out.write("      <div class=\"toolbar\">\r\n");
      out.write("        <input id=\"cl_buscar\" type=\"text\" class=\"search\" placeholder=\"Buscar nombre/identificaci√≥n/correo‚Ä¶\">\r\n");
      out.write("        <button class=\"btn\"        onclick=\"buscarCliente()\">Buscar</button>\r\n");
      out.write("        <button class=\"btn\"        onclick=\"abrirCliente()\">Nuevo</button>\r\n");
      out.write("        <button class=\"btn gray\"   onclick=\"alert('PDF (demo)')\">Generar PDF</button>\r\n");
      out.write("        <button class=\"btn gray\"   onclick=\"alert('Reporte (demo)')\">Generar Reporte</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <table>\r\n");
      out.write("        <thead>\r\n");
      out.write("          <tr>\r\n");
      out.write("            <th>#</th>\r\n");
      out.write("            <th>Nombre</th>\r\n");
      out.write("            <th>Identificaci√≥n</th>\r\n");
      out.write("            <th>Correo</th>\r\n");
      out.write("            <th>Estado</th>\r\n");
      out.write("            <th>F. Creaci√≥n</th>\r\n");
      out.write("            <th>F. Expiraci√≥n</th>\r\n");
      out.write("            <th>Acciones</th>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody id=\"cl_rows\">\r\n");
      out.write("          <!-- Fila demo -->\r\n");
      out.write("          <tr>\r\n");
      out.write("            <td>1</td>\r\n");
      out.write("            <td>Cliente Demo</td>\r\n");
      out.write("            <td>0801-1990-00000</td>\r\n");
      out.write("            <td>demo@correo.com</td>\r\n");
      out.write("            <td>Activo</td>\r\n");
      out.write("            <td>2025-09-01</td>\r\n");
      out.write("            <td>‚Äî</td>\r\n");
      out.write("            <td class=\"actions\">\r\n");
      out.write("              <button class=\"btn\"      onclick=\"abrirCliente(1)\">‚úèÔ∏è</button>\r\n");
      out.write("              <button class=\"btn gray\" onclick=\"eliminarCliente(1)\">üóë</button>\r\n");
      out.write("            </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </tbody>\r\n");
      out.write("      </table>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- Modal Cliente (blanca, campos como en tu captura) -->\r\n");
      out.write("  <div class=\"modal\" id=\"cl_modal\">\r\n");
      out.write("    <div class=\"modal-card\">\r\n");
      out.write("      <h3 style=\"margin:0 0 10px\">REGISTRO CLIENTE</h3>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"grid\">\r\n");
      out.write("        <div class=\"fld\">\r\n");
      out.write("          <label for=\"cl_nombre\">Nombre Completo:</label>\r\n");
      out.write("          <input id=\"cl_nombre\" type=\"text\" placeholder=\"Nombre del cliente\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"fld\">\r\n");
      out.write("          <label for=\"cl_identidad\">N√∫mero de Identificaci√≥n:</label>\r\n");
      out.write("          <input id=\"cl_identidad\" type=\"text\" placeholder=\"Ej. 0801-0000-00000\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"fld\">\r\n");
      out.write("          <label for=\"cl_correo\">Correo Electr√≥nico:</label>\r\n");
      out.write("          <input id=\"cl_correo\" type=\"email\" placeholder=\"correo@dominio.com\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"fld\">\r\n");
      out.write("          <label for=\"cl_estado\">Estado:</label>\r\n");
      out.write("          <select id=\"cl_estado\">\r\n");
      out.write("            <option>Activo</option>\r\n");
      out.write("            <option>Inactivo</option>\r\n");
      out.write("            <option>Bloqueado</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"fld\">\r\n");
      out.write("          <label for=\"cl_dir\">Direcci√≥n:</label>\r\n");
      out.write("          <input id=\"cl_dir\" type=\"text\" placeholder=\"Barrio, colonia, ciudad‚Ä¶\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"grid grid-2\">\r\n");
      out.write("          <div class=\"fld\">\r\n");
      out.write("            <label for=\"cl_fcrea\">Fecha de Creaci√≥n:</label>\r\n");
      out.write("            <input id=\"cl_fcrea\" type=\"date\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"fld\">\r\n");
      out.write("            <label for=\"cl_fexp\">Fecha de Expiraci√≥n:</label>\r\n");
      out.write("            <input id=\"cl_fexp\" type=\"date\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"modal-foot\">\r\n");
      out.write("        <button class=\"btn gray\" onclick=\"limpiarCliente()\">Limpiar</button>\r\n");
      out.write("        <button class=\"btn\"      onclick=\"guardarCliente()\">Guardar</button>\r\n");
      out.write("        <button class=\"btn gray\" onclick=\"cerrarCliente()\">Cerrar</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("    // ====== Modal ======\r\n");
      out.write("    const CL_MODAL = document.getElementById('cl_modal');\r\n");
      out.write("\r\n");
      out.write("    function abrirCliente(id){\r\n");
      out.write("      // si viene id podr√≠as precargar datos (demo)\r\n");
      out.write("      CL_MODAL.classList.add('open');\r\n");
      out.write("    }\r\n");
      out.write("    function cerrarCliente(){ CL_MODAL.classList.remove('open'); }\r\n");
      out.write("\r\n");
      out.write("    // ====== Acciones ======\r\n");
      out.write("    function limpiarCliente(){\r\n");
      out.write("      ['cl_nombre','cl_identidad','cl_correo','cl_dir','cl_fcrea','cl_fexp']\r\n");
      out.write("        .forEach(id => { const el = document.getElementById(id); if (el) el.value = ''; });\r\n");
      out.write("      document.getElementById('cl_estado').value = 'Activo';\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function guardarCliente(){\r\n");
      out.write("      const data = {\r\n");
      out.write("        nombre:     document.getElementById('cl_nombre').value,\r\n");
      out.write("        identidad:  document.getElementById('cl_identidad').value,\r\n");
      out.write("        correo:     document.getElementById('cl_correo').value,\r\n");
      out.write("        estado:     document.getElementById('cl_estado').value,\r\n");
      out.write("        direccion:  document.getElementById('cl_dir').value,\r\n");
      out.write("        fcrea:      document.getElementById('cl_fcrea').value,\r\n");
      out.write("        fexp:       document.getElementById('cl_fexp').value\r\n");
      out.write("      };\r\n");
      out.write("      console.log('Guardar cliente (demo):', data);\r\n");
      out.write("      alert('Guardar cliente (demo). Revisa la consola del navegador.');\r\n");
      out.write("      cerrarCliente();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function eliminarCliente(id){\r\n");
      out.write("      if (confirm('¬øEliminar cliente ' + id + '?')) {\r\n");
      out.write("        alert('Eliminado (demo)');\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function buscarCliente(){\r\n");
      out.write("      alert('Buscar: ' + (document.getElementById('cl_buscar').value || '(vac√≠o)'));\r\n");
      out.write("    }\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
